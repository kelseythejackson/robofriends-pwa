{"ast":null,"code":"import{CHANGE_SEARCH_FIELD,REQUEST_ROBOTS_PENDING,REQUEST_ROBOTS_SUCCESS,REQUEST_ROBOTS_FAILED}from'./constants';export var setSearchField=function setSearchField(text){return{type:CHANGE_SEARCH_FIELD,payload:text};};export var requestRobots=function requestRobots(){return function(dispatch){dispatch({type:REQUEST_ROBOTS_PENDING});fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(data){console.log(data);dispatch({type:REQUEST_ROBOTS_SUCCESS,payload:data});}).catch(function(error){return dispatch({type:REQUEST_ROBOTS_FAILED,payload:error});});};};","map":{"version":3,"sources":["/Users/kelseyjackson/Dev/udemy/junior-to-senior-course/robofriends-pwa/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","type","payload","requestRobots","dispatch","fetch","then","response","json","data","console","log","catch","error"],"mappings":"AAAA,OACEA,mBADF,CAEEC,sBAFF,CAGEC,sBAHF,CAIEC,qBAJF,KAKO,aALP,CAOA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,QAAW,CACvCC,IAAI,CAAEN,mBADiC,CAEvCO,OAAO,CAAEF,IAF8B,CAAX,EAAvB,CAKP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACC,QAAD,CAAc,CAC/CA,QAAQ,CAAC,CACPH,IAAI,CAAEL,sBADC,CAAD,CAAR,CAGAS,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACdC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACAL,QAAQ,CAAC,CAAEH,IAAI,CAAEJ,sBAAR,CAAgCK,OAAO,CAAEO,IAAzC,CAAD,CAAR,CACD,CALH,EAMGG,KANH,CAMS,SAACC,KAAD,QACLT,CAAAA,QAAQ,CAAC,CAAEH,IAAI,CAAEH,qBAAR,CAA+BI,OAAO,CAAEW,KAAxC,CAAD,CADH,EANT,EASD,CAb4B,EAAtB","sourcesContent":["import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from './constants';\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({\n    type: REQUEST_ROBOTS_PENDING,\n  });\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n      dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data });\n    })\n    .catch((error) =>\n      dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\n    );\n};\n"]},"metadata":{},"sourceType":"module"}